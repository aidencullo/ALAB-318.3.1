* Required Objectives [94%]
*** DONE Create and use at least two pieces of custom middleware.	5%
*** DONE Create and use error-handling middleware.	5%
*** DONE "Use at least three different data categories (e.g., users, posts, or comments)."	5%
*** DONE Utilize reasonable data structuring practices.	5%
*** DONE Create GET routes for all data that should be exposed to the client.	5%
*** DONE "Create POST routes for data, as appropriate. At least one data category should allow for client creation via a POST request."	5%
*** DONE "Create PATCH or PUT routes for data, as appropriate. At least one data category should allow for client manipulation via a PATCH or PUT request."	5%
*** DONE "Create DELETE routes for data, as appropriate. At least one data category should allow for client deletion via a DELETE request."	5%
*** DONE "Include query parameters for data filtering, where appropriate. At least one data category should allow for additional filtering through the use of query parameters.
*** DONE "Utilize route parameters, where appropriate."	5%
*** DONE Adhere to the guiding principles of REST.	10%
*** DONE "Create and render at least one view using a view template and template engine. This can be a custom template engine or a third-party engine.
*** DONE "Use simple CSS to style the rendered views.
*** TODO Include a form within a rendered view that allows for interaction with your RESTful API.	3%
*** DONE Utilize reasonable code organization practices.	5%
*** DONE "Ensure that the program runs without errors (comment out things that do not work, and explain your blockers - you can still receive partial credit)."	10%
*** DONE Commit frequently to the git repository.	5%
*** DONE Include a README file that contains a description of your application.	2%
*** DONE "Level of effort displayed in creativity, presentation, and user experience."	5%

* Bonus Objectives [0%]
*** TODO "Include a practical usage of regular expressions within route paths.
*** TODO "Research and effectively use at least one third-party Node package for practical, sensible purposes.

* Personal Objectives [0%]
*** TODO Converty to TypeScript
*** TODO Use a database
*** TODO Use controllers
*** TODO Create admin routes
*** TODO Create a login system
*** TODO xml/json/text response types
*** TODO handle nonexistent routes
